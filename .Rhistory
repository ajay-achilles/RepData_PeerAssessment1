find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
exit
find.package("devtools")
find_rtools()
library(devtools)
find_rtools()
install.packages("swirl")
install.packages("swirl")
packageVersion("swirl")
add2 <- function(x,y){
x+y
}
add2(2,3)
above <- function(x,n){
use <- x > n
x[use]
}
x < 1:20
x<- 1:20
above(x)
above(x,12)
columnmean <- function(y){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
columnmean(airquality)
columnmean <- function(y,removeNA = TRUE){
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc){
means[i] <- mean(y[,i],na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,FALSE)
formals(columnmean)
formals(above)
formals(above10)
formals(add2)
args(lm)
args(paste)
args(cat)
search()
packageVersion("swirl")
;
pwd
;
library(datasets)
data(iris)
?iris
head(iris)
summary(iris)
lapply(split(iris,iris$Species),function(x) mean(x$Sepal.Length))
library(datasets)
library(datasets)
data(mtcars)
?mtcars
> mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
?mtcars
mean(mtcars[mtcars$cyl == "8",]$hp) - mean(mtcars[mtcars$cyl == "4",]$hp)
remove.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
# Read PM2.5 emissions dataset
emissions.df <- readRDS('summarySCC_PM25.rds')
# Read emission source classification dataset
scc.df <- readRDS('Source_Classification_Code.rds')
# Get the emissions in Baltimore City
baltimore.emissions.df = emissions.df[emissions.df$fips == '24510', ]
# Get the total emissions in Baltimore, grouped by type and year
baltimore.emission.totals.df <- aggregate(Emissions ~ type + year, baltimore.emissions.df, FUN = sum)
# Open png device
png(filename='plot3.png', width=1200, height=640, units='px')
# Print numeric values in fixed notation
options(scipen=10)
plot3 <- qplot(year, Emissions, data=baltimore.emission.totals.df, facets = . ~ type) +
geom_line() +
xlab("Year") +
ylab('PM2.5 Emissions (tons)') +
ggtitle('Total PM2.5 Emissions in Baltimore City')
print(plot3)
# Close png device
dev.off()
library(ggplot2)
# Read PM2.5 emissions dataset
emissions.df <- readRDS('summarySCC_PM25.rds')
# Read emission source classification dataset
scc.df <- readRDS('Source_Classification_Code.rds')
# Get the emissions from motor vehicle sources (type = ON-ROAD) in Baltimore City (fips code: '24510') and Los Angeles (fips code: '06037')
city.emissions.df <- emissions.df[emissions.df$type == 'ON-ROAD' & emissions.df$fips %in% c('24510', '06037'), ]
# Get the total emissions for Baltimore City and Los Angeles, grouped by year and city
city.emissions.by.year.df <- aggregate(Emissions ~ year + fips, data = city.emissions.df, FUN = sum)
# Add city names for use in the plot
city.emissions.by.year.df$city = city.emissions.by.year.df$fips
city.emissions.by.year.df[which(city.emissions.by.year.df$fips == '24510'), 'city'] = 'Baltimore City'
city.emissions.by.year.df[which(city.emissions.by.year.df$fips == '06037'), 'city'] = 'Los Angeles'
# Open png device
png(filename='plot6.png', width=640, height=480, units='px')
# Print numeric values in fixed notation
options(scipen=10)
plot6 <- qplot(year, Emissions, data=city.emissions.by.year.df, facets = . ~ fips) +
geom_line() +
xlab("Year") +
ylab('PM2.5 Emissions (tons)') +
ggtitle('Total PM2.5 Emissions in Los Angeles (06037) and Baltimore City (24510)')
print(plot6)
# Close png device
dev.off()
getwd()
setwd("\\\\europe.astellas.net/dfsdata/APNL/USerData/UserData03a/01/NL2002549/Astellas_Bkup/Astellas/Data Science Learning/Working_Directory/Reprod_research")
getwd()
setwd("\\\\europe.astellas.net/dfsdata/APNL/USerData/UserData03a/01/NL2002549/Astellas_Bkup/Astellas/Data Science Learning/Working_Directory/Reprod_research/RepData_PeerAssessment1")
getwd()
warning()
warning()
